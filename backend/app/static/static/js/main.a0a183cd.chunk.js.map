{"version":3,"sources":["store/auth.js","components/Login.js","components/Signup.js","components/Auth.js","App.js","store/configureStore.js","index.js"],"names":["SET_USER","setUser","user","type","login","email","password","dispatch","a","fetch","method","headers","body","JSON","stringify","res","json","data","ok","Login","useState","setEmail","setPassword","noEmail","setNoEmail","noPassword","setNoPassword","currentUserId","useSelector","state","auth","id","useDispatch","emailDiv","passwordDiv","to","className","onSubmit","e","preventDefault","toLocaleLowerCase","style","color","name","value","placeholder","onChange","target","onClick","textDecoration","fontWeight","Signup","username","setUsername","noInfo","setNoInfo","signup","Auth","exact","path","component","App","storeEnhancer","loading","setLoading","useEffect","loadUser","rootReducer","combineReducers","action","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a183cd.chunk.js","sourcesContent":["const SET_USER = 'auth/SET_USER';\nconst LOGOUT_USER = 'auth/LOGOUT_USER';\n\nexport const setUser = (user) => {\n    if(!user){\n        return {\n        type: SET_USER,\n        user: {}\n        }\n    }\n    return {\n        type: SET_USER,\n        user\n    };\n};\n\nexport const logoutUser = () => {\n    return {\n        type: LOGOUT_USER\n    }\n}\n\nexport const login = (email, password) => {\n    return async dispatch => {\n        const res = await fetch('/api/session', {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ email, password })\n        })\n        res.data = await res.json();\n        if (res.ok) { \n            dispatch(setUser(res.data.user))\n        }\n        return res;\n    }\n}\n\nexport const signup = (username, email, password) => {\n    return async dispatch => {\n        const res = await fetch('/api/users/signup', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, email, password })\n        })\n        res.data = await res.json();\n        if (res.ok) {\n            dispatch(setUser(res.data.user));\n        }\n        return res;\n    }\n}\n\n\n\nexport const logout = () => {\n    return async dispatch => {\n        const res = await fetch('/api/session', {\n        method: 'delete',\n            headers: { },\n        })\n        if (res.ok) {\n            dispatch(logoutUser());\n        }\n        return res;\n    }\n}\n\nexport default function authReducer(state = {}, action) {\n  switch (action.type) {\n    case SET_USER:\n      return action.user;\n    case LOGOUT_USER:\n      return {};\n    default:\n      return state;\n  }\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../store/auth'\nimport { Redirect, Link } from 'react-router-dom';\nimport '../css/login.css'\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [noEmail, setNoEmail] = useState('');\n  const [noPassword, setNoPassword] = useState('');\n  const currentUserId = useSelector(state => state.auth.id);\n\n  const dispatch = useDispatch();\n  let emailDiv = \"form-input\";\n  let passwordDiv = \"form-input\";\n  const handleSubmit = e => {\n    e.preventDefault();\n    setNoEmail('');\n    setNoPassword('');\n    if (email && password) {\n      dispatch(login(email.toLocaleLowerCase(), password));\n    } else if (!email && password) {\n      emailDiv = \"bad-input\";\n      setNoEmail(\"Oi! We're gonna need that email of yours!\")\n    } else if (email && !password) {\n      passwordDiv = \"bad-input\";\n      setNoPassword(\"What's the password?\");\n    }\n  }\n\n  const demo = e => {\n    e.preventDefault();\n    dispatch(login('demo@moneypit.com', 'password'))\n  };\n  if (currentUserId) return <Redirect to='/' />\n  return (\n    <>\n      <div className='loginWrapper'>\n          <div className=\"loginContainer\">\n            <div id='loginLabel'>\n              Log in\n            </div>\n            <form className='loginContainer__form' onSubmit={handleSubmit}>\n              <div>\n                <span style={{ color: 'red' }}>{noEmail}</span>\n                <input type='email' className={emailDiv} name='email' value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\n              </div>\n              <div>\n                <input type='password' className={passwordDiv} name='password' value={password} placeholder='Password' onChange={e => setPassword(e.target.value)} />\n              </div>\n              <span style={{ color: 'red' }}>{noPassword}</span>\n              <div>\n                <button type='submit' className='loginContainer__loginButton'>Log in</button>\n              </div>\n              <button className='loginContainer__loginButton' onClick={demo}>Demo Log in</button>\n            </form>\n            <div id='redirect'>\n              New to Kickstarter? <Link to=\"/signup\" style={{ textDecoration: 'none', color: 'blue', fontWeight: 'bold' }} > Sign up </Link>\n            </div>\n          </div>\n        </div>\n    </>\n  )\n}\nexport default Login;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signup } from '../store/auth';\nimport { Redirect, Link } from 'react-router-dom';\nimport '../css/signup.css'\n\nlet emailDiv = \"signup-input\";\nlet passwordDiv = \"signup-input\";\n\nfunction Signup() {\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [noInfo, setNoInfo] = useState('');\n  const [noEmail, setNoEmail] = useState('');\n  const [noPassword, setNoPassword] = useState('');\n  const currentUserId = useSelector(state => state.auth.id);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    emailDiv = \"signup-input\";\n    passwordDiv = \"signup-input\";\n    setNoEmail('');\n    setNoPassword('');\n    setNoInfo('');\n    if (email && password) {\n      dispatch(signup(username, email.toLocaleLowerCase(), password));\n    } else if (!email && password) {\n      emailDiv = \"bad-input\";\n      setNoEmail(\"Oi! We're gonna need that email of yours!\")\n    } else if (email && !password) {\n      passwordDiv = \"bad-input\";\n      setNoPassword(\"What's the password?\");\n    } else {\n      emailDiv = \"bad-input\";\n      passwordDiv = \"bad-input\";\n      setNoInfo(\"You can't get in if you're not a member!\")\n    }\n  }\n  if (currentUserId) return <Redirect to='/' />\n  return (\n    <>\n      <div className='signup_master'>\n        <div className='signup_master-box'>\n          <div className=\"signup-container\">\n            <div className='signup-redirect'>\n              Have and account? <Link to='/login' style={{ textDecoration: 'none', color: 'blue', fontWeight: 'bold' }} > Log in </Link>\n            </div>\n            <div className=\"signup-container-box\">\n              <form className='form_container' onSubmit={handleSubmit}>\n                <div className='signup-label'>\n                  Sign up\n                </div>\n                <div>\n                  <input type='text' className={emailDiv} name='username' value={username} placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\n                </div>\n                <div>\n                  <span style={{ color: 'red' }}>{noInfo}</span>\n                  <input type='email' className={emailDiv} name='email' value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\n                </div>\n                <div>\n                  <span style={{ color: 'red' }}>{noInfo}</span>\n                  <input type='email' className={emailDiv} name='email' value={email} placeholder=\"Re-enter Email\" onChange={e => setEmail(e.target.value)} />\n                </div>\n                <span style={{ color: 'red' }}>{noEmail}</span>\n                <div>\n                  <input type='password' className={passwordDiv} name='password' value={password} placeholder='Password' onChange={e => setPassword(e.target.value)} />\n                </div>\n                <span style={{ color: 'red' }}>{noPassword}</span>\n                <div>\n                  <input type='password' className={passwordDiv} name='password' value={password} placeholder='Re-Enter Password' onChange={e => setPassword(e.target.value)} />\n                </div>\n                <div>\n                  <button type='submit' className='signup-button'>Create account</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default Signup;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from '../components/Login';\nimport Signup from '../components/Signup'\n\n\n\nexport default function Auth() {\n    return (\n        <>\n        <Switch>\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/signup' component={Signup} />\n        </Switch>\n        </>\n    )\n}\n","\nimport React, {useEffect, useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport { setUser } from './store/auth';\n\nfunction App() {\n    const [loading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const loadUser = async () => {\n        // enter your back end route to get the current user\n        const res = await fetch(\"/api/session/current\");\n        if (res.ok) {\n            res.data = await res.json(); // current user info - obj with key of user\n            dispatch(setUser(res.data.user));\n        }\n        setLoading(false);\n        }\n        loadUser();\n    }, [dispatch]);\n\n    if(loading) return null;\n        \n    return (\n        <BrowserRouter>\n        <Auth />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport auth from './auth';\n\nconst rootReducer = combineReducers({\n    auth\n});\n\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n    storeEnhancer = applyMiddleware(thunk);\n}\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        storeEnhancer\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\n\nconst store = configureStore();\nif (process.env.NODE_ENV !== 'production') {\n    window.store = store;\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n        <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}